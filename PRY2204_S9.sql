-- Eliminación segura de tablas previas
BEGIN
    FOR t IN (SELECT table_name FROM user_tables) LOOP
        EXECUTE IMMEDIATE 'DROP TABLE ' || t.table_name || ' CASCADE CONSTRAINTS PURGE';
    END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/


-- 1. SECUENCIAS
CREATE SEQUENCE SEQ_REGION START WITH 21 INCREMENT BY 1;

-- 2. TABLAS BASE TERRITORIALES
CREATE TABLE REGION (
    ID_REGION        NUMBER(4) DEFAULT SEQ_REGION.NEXTVAL PRIMARY KEY,
    NOMBRE_REGION    VARCHAR2(60) NOT NULL,
    CONSTRAINT UN_REGION_NOMBRE UNIQUE (NOMBRE_REGION)
);

CREATE TABLE COMUNA (
    ID_COMUNA        NUMBER(6) GENERATED ALWAYS AS IDENTITY (START WITH 1050 INCREMENT BY 5),
    NOMBRE_COMUNA    VARCHAR2(60) NOT NULL,
    ID_REGION        NUMBER(4) NOT NULL,
    CONSTRAINT PK_COMUNA PRIMARY KEY (ID_COMUNA),
    CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (ID_REGION)
        REFERENCES REGION(ID_REGION),
    CONSTRAINT UN_COMUNA_NOMBRE UNIQUE (NOMBRE_COMUNA)
);

CREATE TABLE PLANTA (
    ID_PLANTA        NUMBER(4) PRIMARY KEY,
    NOMBRE_PLANTA    VARCHAR2(80) NOT NULL,
    DIRECCION        VARCHAR2(120) NOT NULL,
    ID_COMUNA        NUMBER(6) NOT NULL,
    CONSTRAINT FK_PLANTA_COMUNA FOREIGN KEY (ID_COMUNA)
        REFERENCES COMUNA(ID_COMUNA)
);

-- 3. TABLAS DE PERSONAL Y CLASIFICACIÓN
CREATE TABLE EMPLEADO (
    ID_EMPLEADO         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    RUT                 VARCHAR2(12) NOT NULL UNIQUE,
    NOMBRES             VARCHAR2(80) NOT NULL,
    APELLIDOS           VARCHAR2(80) NOT NULL,
    FECHA_CONTRATACION  DATE NOT NULL,
    SUELDO_BASE         NUMBER(10,2) NOT NULL,
    ESTADO_ACTIVO       CHAR(1) DEFAULT 'S' CHECK (ESTADO_ACTIVO IN ('S','N')),
    AFP                 VARCHAR2(60) NOT NULL,
    SISTEMA_SALUD       VARCHAR2(60) NOT NULL,
    ID_PLANTA           NUMBER(4) NOT NULL,
    ID_JEFE_DIRECTO     NUMBER NULL,
    CONSTRAINT PK_EMPLEADO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT FK_EMP_PLANTA FOREIGN KEY (ID_PLANTA) REFERENCES PLANTA(ID_PLANTA),
    CONSTRAINT FK_EMP_JEFE FOREIGN KEY (ID_JEFE_DIRECTO) REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE JEFE_TURNO (
    ID_EMPLEADO          NUMBER PRIMARY KEY,
    AREA_RESPONSABILIDAD VARCHAR2(80) NOT NULL,
    MAX_OPERARIOS        NUMBER NOT NULL,
    CONSTRAINT FK_JEFE_EMP FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE
);

CREATE TABLE CATEGORIA_PROCESO (
    ID_CATEGORIA_PROCESO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOMBRE_PROCESO       VARCHAR2(60) NOT NULL
);

CREATE TABLE CERTIFICACION (
    ID_CERTIFICACION NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOMBRE           VARCHAR2(80) NOT NULL,
    NIVEL            VARCHAR2(40) NULL
);

CREATE TABLE ESPECIALIDAD (
    ID_ESPECIALIDAD NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOMBRE          VARCHAR2(60) NOT NULL
);

CREATE TABLE OPERARIO (
    ID_EMPLEADO           NUMBER PRIMARY KEY,
    ID_CATEGORIA_PROCESO  NUMBER NOT NULL,
    ID_CERTIFICACION      NUMBER NULL,
    HORAS_ESTANDAR        NUMBER DEFAULT 8,
    CONSTRAINT FK_OPERARIO_EMP FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE,
    CONSTRAINT FK_OPERARIO_CAT FOREIGN KEY (ID_CATEGORIA_PROCESO)
        REFERENCES CATEGORIA_PROCESO(ID_CATEGORIA_PROCESO),
    CONSTRAINT FK_OPERARIO_CERT FOREIGN KEY (ID_CERTIFICACION)
        REFERENCES CERTIFICACION(ID_CERTIFICACION)
);

CREATE TABLE TECNICO_MANTENCION (
    ID_EMPLEADO           NUMBER PRIMARY KEY,
    ID_ESPECIALIDAD       NUMBER NOT NULL,
    ID_CERTIFICACION      NUMBER NULL,
    TIEMPO_RESPUESTA_STD  NUMBER NOT NULL,
    CONSTRAINT FK_TEC_EMP FOREIGN KEY (ID_EMPLEADO)
        REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE,
    CONSTRAINT FK_TEC_ESP FOREIGN KEY (ID_ESPECIALIDAD)
        REFERENCES ESPECIALIDAD(ID_ESPECIALIDAD),
    CONSTRAINT FK_TEC_CERT FOREIGN KEY (ID_CERTIFICACION)
        REFERENCES CERTIFICACION(ID_CERTIFICACION)
);

-- 4. TABLAS DE MAQUINARIA
CREATE TABLE TIPO_MAQUINA (
    ID_TIPO_MAQUINA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOMBRE          VARCHAR2(60) NOT NULL,
    CONSTRAINT UN_TIPO_MAQUINA UNIQUE (NOMBRE)
);

CREATE TABLE MAQUINA (
    ID_MAQUINA      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NUMERO_MAQUINA  VARCHAR2(20) NOT NULL,
    NOMBRE          VARCHAR2(80) NOT NULL,
    ESTADO_ACTIVO   CHAR(1) DEFAULT 'S' CHECK (ESTADO_ACTIVO IN ('S','N')),
    ID_TIPO_MAQUINA NUMBER NOT NULL,
    ID_PLANTA       NUMBER(4) NOT NULL,
    CONSTRAINT FK_MAQ_TIPO FOREIGN KEY (ID_TIPO_MAQUINA) REFERENCES TIPO_MAQUINA(ID_TIPO_MAQUINA),
    CONSTRAINT FK_MAQ_PLANTA FOREIGN KEY (ID_PLANTA) REFERENCES PLANTA(ID_PLANTA),
    CONSTRAINT UQ_MAQ_PLANTA UNIQUE (NUMERO_MAQUINA, ID_PLANTA)
);

-- 5. TABLAS DE TURNOS Y ASIGNACIONES
CREATE TABLE TURNO (
    ID_TURNO       VARCHAR2(10) PRIMARY KEY,
    NOMBRE_TURNO   VARCHAR2(20) NOT NULL,
    HORA_INICIO    CHAR(5) NOT NULL,
    HORA_FIN       CHAR(5) NOT NULL,
    CONSTRAINT CK_TURNO_NOMBRE CHECK (NOMBRE_TURNO IN ('Mañana','Tarde','Noche')),
    CONSTRAINT UN_TURNO_NOMBRE UNIQUE (NOMBRE_TURNO)
);

CREATE TABLE ASIGNACION_TURNO (
    ID_ASIGNACION   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FECHA           DATE NOT NULL,
    ID_EMPLEADO     NUMBER NOT NULL,
    ID_TURNO        VARCHAR2(10) NOT NULL,
    ID_MAQUINA      NUMBER NOT NULL,
    ROL_DESEMPENADO VARCHAR2(60),
    CONSTRAINT UQ_ASIG_UNICA UNIQUE (FECHA, ID_EMPLEADO),
    CONSTRAINT FK_ASIG_EMP FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT FK_ASIG_TURNO FOREIGN KEY (ID_TURNO) REFERENCES TURNO(ID_TURNO),
    CONSTRAINT FK_ASIG_MAQ FOREIGN KEY (ID_MAQUINA) REFERENCES MAQUINA(ID_MAQUINA)
);

-- 6. ÓRDENES DE MANTENCIÓN
CREATE TABLE ORDEN_MANTENCION (
    ID_ORDEN          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ID_MAQUINA        NUMBER NOT NULL,
    ID_TECNICO        NUMBER NOT NULL,
    FECHA_PROGRAMADA  DATE NOT NULL,
    FECHA_EJECUCION   DATE NULL,
    DESCRIPCION_TRABAJO VARCHAR2(255) NOT NULL,
    CONSTRAINT FK_OM_MAQ FOREIGN KEY (ID_MAQUINA) REFERENCES MAQUINA(ID_MAQUINA),
    CONSTRAINT FK_OM_TEC FOREIGN KEY (ID_TECNICO) REFERENCES TECNICO_MANTENCION(ID_EMPLEADO)
);

-- 7. TRIGGER: VALIDAR FECHAS DE MANTENCIÓN
CREATE OR REPLACE TRIGGER TRG_OM_FECHAS
BEFORE INSERT OR UPDATE ON ORDEN_MANTENCION
FOR EACH ROW
BEGIN
    IF :NEW.FECHA_EJECUCION IS NOT NULL AND :NEW.FECHA_EJECUCION < :NEW.FECHA_PROGRAMADA THEN
        RAISE_APPLICATION_ERROR(-20001, 'La fecha de ejecución no puede ser anterior a la programada');
    END IF;
END;
/

-- 8. POBLAMIENTO INICIAL 

-- REGION
INSERT INTO REGION (NOMBRE_REGION) VALUES ('Región de Valparaíso');
INSERT INTO REGION (NOMBRE_REGION) VALUES ('Región Metropolitana');

-- COMUNA
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Quilpué', 21);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Maipú', 22);

-- PLANTA
INSERT INTO PLANTA (ID_PLANTA, NOMBRE_PLANTA, DIRECCION, ID_COMUNA)
VALUES (45, 'Planta Oriente', 'Camino Industrial 1234', 1050);
INSERT INTO PLANTA (ID_PLANTA, NOMBRE_PLANTA, DIRECCION, ID_COMUNA)
VALUES (46, 'Planta Costa', 'Av. Vidrieras 890', 1055);

-- TURNO
INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN)
VALUES ('M0715', 'Mañana', '07:00', '15:00');
INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN)
VALUES ('N2307', 'Noche', '23:00', '07:00');
INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN)
VALUES ('T1523', 'Tarde', '15:00', '23:00');

COMMIT;

-- INFORME 1
SELECT
    ID_TURNO       AS "TURNO",
    NOMBRE_TURNO   AS "DESCRIPCION",
    HORA_INICIO    AS "ENTRADA",
    HORA_FIN       AS "SALIDA"
FROM
    TURNO
WHERE
    TO_NUMBER(SUBSTR(HORA_INICIO, 1, 2)) > 20
ORDER BY
    HORA_INICIO DESC;
    
-- INFORME 2
SELECT
    NOMBRE_TURNO || ' (' || ID_TURNO || ')' AS "TURNO",
    HORA_INICIO  AS "ENTRADA",
    HORA_FIN     AS "SALIDA"
FROM
    TURNO
WHERE
    TO_NUMBER(SUBSTR(HORA_INICIO, 1, 2)) BETWEEN 6 AND 14
ORDER BY
    HORA_INICIO ASC;
