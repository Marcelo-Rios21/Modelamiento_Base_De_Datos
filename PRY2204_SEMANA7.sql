-- CASO 1: IMPLEMENTACION DEL MODELO
BEGIN EXECUTE IMMEDIATE 'DROP TABLE DOMINIO CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE TITULACION CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE PERSONAL CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE COMPANIA CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE IDIOMA CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE TITULO CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ESTADO_CIVIL CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE GENERO CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE COMUNA CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE REGION CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- Creacion de tablas
CREATE TABLE REGION (
  id_region      NUMBER(2) GENERATED BY DEFAULT AS IDENTITY
                   (START WITH 7 INCREMENT BY 2) NOT NULL,
  nombre_region  VARCHAR2(25) NOT NULL,
  CONSTRAINT PK_REGION PRIMARY KEY (id_region),
  CONSTRAINT UN_REGION_NOMBRE UNIQUE (nombre_region)
);

CREATE TABLE COMUNA (
  id_comuna      NUMBER(5)   NOT NULL,
  comuna_nombre  VARCHAR2(25) NOT NULL,
  cod_region     NUMBER(2)   NOT NULL,
  CONSTRAINT PK_COMUNA PRIMARY KEY (id_comuna, cod_region),
  CONSTRAINT FK_COMUNA_REGION
    FOREIGN KEY (cod_region) REFERENCES REGION(id_region),
  CONSTRAINT UN_COMUNA_NOMBRE_REGION UNIQUE (comuna_nombre, cod_region)
);

CREATE INDEX IX_COMUNA_REGION ON COMUNA (cod_region);

CREATE TABLE GENERO (
  id_genero         VARCHAR2(3)  NOT NULL,
  descripcion_genero VARCHAR2(25) NOT NULL,
  CONSTRAINT PK_GENERO PRIMARY KEY (id_genero),
  CONSTRAINT UN_GENERO_DESC UNIQUE (descripcion_genero)
);

CREATE TABLE ESTADO_CIVIL (
  id_estado_civil   VARCHAR2(2)  NOT NULL,
  descripcion_est_civil VARCHAR2(25) NOT NULL,
  CONSTRAINT PK_ESTADO_CIVIL PRIMARY KEY (id_estado_civil),
  CONSTRAINT UN_ESTADO_CIVIL_DESC UNIQUE (descripcion_est_civil)
);

CREATE TABLE TITULO (
  id_titulo         VARCHAR2(3)  NOT NULL,
  descripcion_titulo VARCHAR2(60) NOT NULL,
  CONSTRAINT PK_TITULO PRIMARY KEY (id_titulo),
  CONSTRAINT UN_TITULO_DESC UNIQUE (descripcion_titulo)
);

CREATE TABLE IDIOMA (
  id_idioma     NUMBER(3) GENERATED BY DEFAULT AS IDENTITY
                   (START WITH 25 INCREMENT BY 3) NOT NULL,
  nombre_idioma VARCHAR2(30) NOT NULL,
  CONSTRAINT PK_IDIOMA PRIMARY KEY (id_idioma),
  CONSTRAINT UN_IDIOMA_NOMBRE UNIQUE (nombre_idioma)
);

CREATE TABLE COMPANIA (
  id_empresa      NUMBER(2)    NOT NULL,
  nombre_empresa  VARCHAR2(25) NOT NULL,
  calle           VARCHAR2(50) NOT NULL,
  numeracion      NUMBER(5)    NOT NULL,
  ntra_promedio   NUMBER(10),          -- número de trabajadores promedio
  pct_aumento     NUMBER(4,3),         -- fracción (ej: 0.035 = 3.5%)
  cod_comuna      NUMBER(5)    NOT NULL,
  cod_region      NUMBER(2)    NOT NULL,
  CONSTRAINT PK_COMPANIA PRIMARY KEY (id_empresa),
  CONSTRAINT UN_COMPANIA_NOMBRE UNIQUE (nombre_empresa),
  CONSTRAINT CK_COMPANIA_NUMERACION_POS CHECK (numeracion > 0),
  CONSTRAINT CK_COMPANIA_PCT_AUM_0_1 CHECK (pct_aumento IS NULL OR (pct_aumento >= 0 AND pct_aumento <= 1)),
  CONSTRAINT FK_COMPANIA_COMUNA
    FOREIGN KEY (cod_comuna, cod_region)
    REFERENCES COMUNA (id_comuna, cod_region)
);

CREATE INDEX IX_COMPANIA_COMUNA ON COMPANIA (cod_comuna, cod_region);

CREATE TABLE PERSONAL (
  rut_persona       NUMBER(8)    NOT NULL,
  dv_persona        CHAR(1)      NOT NULL,
  primer_nombre     VARCHAR2(25) NOT NULL,
  segundo_nombre    VARCHAR2(25),
  primer_apellido   VARCHAR2(25) NOT NULL,
  segundo_apellido  VARCHAR2(25),
  fecha_contratacion DATE        NOT NULL,
  fecha_nacimiento   DATE        NOT NULL,
  email             VARCHAR2(100),
  calle             VARCHAR2(50),
  numeracion        NUMBER(5),
  sueldo            NUMBER(12,2),
  cod_comuna        NUMBER(5)    NOT NULL,
  cod_region        NUMBER(2)    NOT NULL,
  cod_genero        VARCHAR2(3)  NOT NULL,
  cod_estado_civil  VARCHAR2(2)  NOT NULL,
  cod_empresa       NUMBER(2)    NOT NULL,
  encargado_rut     NUMBER(8),
  CONSTRAINT PK_PERSONAL PRIMARY KEY (rut_persona),
  CONSTRAINT CK_PERSONAL_SUELDO_NN CHECK (sueldo IS NULL OR sueldo >= 0),
  CONSTRAINT CK_PERSONAL_NUMERACION_POS CHECK (numeracion IS NULL OR numeracion > 0),
  CONSTRAINT CK_PERSONAL_FECHAS CHECK (fecha_contratacion >= fecha_nacimiento),
  CONSTRAINT UN_PERSONAL_EMAIL UNIQUE (email),
  CONSTRAINT FK_PERSONAL_COMUNA
    FOREIGN KEY (cod_comuna, cod_region)
    REFERENCES COMUNA (id_comuna, cod_region),
  CONSTRAINT FK_PERSONAL_REGION
    FOREIGN KEY (cod_region)
    REFERENCES REGION (id_region),
  CONSTRAINT FK_PERSONAL_GENERO
    FOREIGN KEY (cod_genero)
    REFERENCES GENERO (id_genero),
  CONSTRAINT FK_PERSONAL_ESTADO_CIVIL
    FOREIGN KEY (cod_estado_civil)
    REFERENCES ESTADO_CIVIL (id_estado_civil),
  CONSTRAINT FK_PERSONAL_COMPANIA
    FOREIGN KEY (cod_empresa)
    REFERENCES COMPANIA (id_empresa),
  CONSTRAINT FK_PERSONAL_ENCARGADO
    FOREIGN KEY (encargado_rut)
    REFERENCES PERSONAL (rut_persona),
  CONSTRAINT CK_PERSONAL_NO_LOOP CHECK (encargado_rut IS NULL OR encargado_rut <> rut_persona)
);

CREATE INDEX IX_PERSONAL_COMUNA   ON PERSONAL (cod_comuna, cod_region);
CREATE INDEX IX_PERSONAL_EMPRESA  ON PERSONAL (cod_empresa);
CREATE INDEX IX_PERSONAL_GENERO   ON PERSONAL (cod_genero);
CREATE INDEX IX_PERSONAL_EDOCIVIL ON PERSONAL (cod_estado_civil);
CREATE INDEX IX_PERSONAL_ENCARGADO ON PERSONAL (encargado_rut);

CREATE TABLE TITULACION (
  cod_titulo       VARCHAR2(3) NOT NULL,
  persona_rut      NUMBER(8)   NOT NULL,
  fecha_titulacion DATE        NOT NULL,
  CONSTRAINT PK_TITULACION PRIMARY KEY (cod_titulo, persona_rut),
  CONSTRAINT FK_TITULACION_TITULO
    FOREIGN KEY (cod_titulo)  REFERENCES TITULO (id_titulo),
  CONSTRAINT FK_TITULACION_PERSONAL
    FOREIGN KEY (persona_rut) REFERENCES PERSONAL (rut_persona)
);

CREATE INDEX IX_TITULACION_PERSONA ON TITULACION (persona_rut);

CREATE TABLE DOMINIO (
  id_idioma   NUMBER(3)   NOT NULL,
  persona_rut NUMBER(8)   NOT NULL,
  nivel       VARCHAR2(25) NOT NULL,   -- Básico/Intermedio/Avanzado/etc.
  CONSTRAINT PK_DOMINIO PRIMARY KEY (id_idioma, persona_rut),
  CONSTRAINT FK_DOMINIO_IDIOMA
    FOREIGN KEY (id_idioma)  REFERENCES IDIOMA (id_idioma),
  CONSTRAINT FK_DOMINIO_PERSONAL
    FOREIGN KEY (persona_rut) REFERENCES PERSONAL (rut_persona)
);

CREATE INDEX IX_DOMINIO_PERSONA ON DOMINIO (persona_rut);
-- Identidades configuradas
SELECT table_name, column_name, generation_type, identity_options
FROM   user_tab_identity_cols
WHERE  table_name IN ('REGION','IDIOMA');

-- Constraints creadas y habilitadas
SELECT constraint_name, constraint_type, table_name, status, validated
FROM   user_constraints
WHERE  table_name IN ('REGION','COMUNA','COMPANIA','PERSONAL','TITULACION','DOMINIO','GENERO','ESTADO_CIVIL','TITULO','IDIOMA')
ORDER  BY table_name, constraint_type;

-- CASO 2: MODIFICACION DEL MODELO
-- Limpieza en caso de CK previas (si existen)
BEGIN
  FOR c IN (
    SELECT constraint_name
    FROM   user_constraints
    WHERE  table_name = 'PERSONAL'
    AND    constraint_name IN ('CK_PERSONAL_DV', 'CK_PERSONAL_SUELDO_NN')
  ) LOOP
    EXECUTE IMMEDIATE 'ALTER TABLE PERSONAL DROP CONSTRAINT '||c.constraint_name;
  END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-- DV del RUN solo 0..9 y 'K' 
ALTER TABLE PERSONAL
  ADD CONSTRAINT CK_PERSONAL_DV_LIST
  CHECK (dv_persona IN ('0','1','2','3','4','5','6','7','8','9','K'));

-- Sueldo mínimo 450.000
ALTER TABLE PERSONAL
  ADD CONSTRAINT CK_PERSONAL_SUELDO_MIN
  CHECK (sueldo IS NULL OR sueldo >= 450000);
  
-- CASO 3: POBLAMIENTO DEL MODELO
-- Limpieza en caso de re ejecucion
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_COMUNA';   EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_COMPANIA'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- Secuencias con ritmo
CREATE SEQUENCE SEQ_COMUNA   START WITH 1101 INCREMENT BY 6 NOCACHE;
CREATE SEQUENCE SEQ_COMPANIA START WITH 10   INCREMENT BY 5 NOCACHE;

--Insercion de datos
INSERT INTO REGION (nombre_region) VALUES ('ARICA Y PARINACOTA');  
INSERT INTO REGION (nombre_region) VALUES ('METROPOLITANA');       
INSERT INTO REGION (nombre_region) VALUES ('LA ARAUCANIA');    

INSERT INTO IDIOMA (nombre_idioma) VALUES ('Ingles');   
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Chino');    
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Aleman');   
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Espanol');  
INSERT INTO IDIOMA (nombre_idioma) VALUES ('Frances');  

INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region)
VALUES (SEQ_COMUNA.NEXTVAL, 'Arica',
        (SELECT id_region FROM REGION WHERE nombre_region = 'ARICA Y PARINACOTA'));

INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region)
VALUES (SEQ_COMUNA.NEXTVAL, 'Santiago',
        (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA'));

INSERT INTO COMUNA (id_comuna, comuna_nombre, cod_region)
VALUES (SEQ_COMUNA.NEXTVAL, 'Temuco',
        (SELECT id_region FROM REGION WHERE nombre_region = 'LA ARAUCANIA'));
        
INSERT INTO COMPANIA (
  id_empresa, nombre_empresa, calle, numeracion, ntra_promedio, pct_aumento,
  cod_comuna, cod_region
)
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'CCyRojas', 'Amapolas', 506, 1857000, 0.5,
  (SELECT c.id_comuna FROM COMUNA c
    JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Arica' AND r.nombre_region = 'ARICA Y PARINACOTA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'ARICA Y PARINACOTA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'SenTiY', 'Los Alamos', 3490, 987000, 0.625,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Santiago' AND r.nombre_region = 'METROPOLITANA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'Praxia LTDA', 'Las Camelias', 11098, 2157000, 0.035,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Santiago' AND r.nombre_region = 'METROPOLITANA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'TIC SPA', 'FLORES S.A.', 4357, 875000, NULL,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Arica' AND r.nombre_region = 'ARICA Y PARINACOTA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'ARICA Y PARINACOTA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'SANTANA LTDA', 'AVDA VIC. MACKENA', 156, 757000, 0.015,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Santiago' AND r.nombre_region = 'METROPOLITANA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'FLORES Y ASOCIADOS', 'PEDRO LATORRE', 567, 598000, 0.015,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Temuco' AND r.nombre_region = 'LA ARAUCANIA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'LA ARAUCANIA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'CAGLIARI D.', 'ALAMEDA', 206, 1857000, NULL,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Santiago' AND r.nombre_region = 'METROPOLITANA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'Rojas HNOS LTDA', 'SUCRE', 106, 957000, 0.005,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Temuco' AND r.nombre_region = 'LA ARAUCANIA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'LA ARAUCANIA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'FRIENDS P. S.A', 'SUECIA', 506, 857000, 0.015,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Temuco' AND r.nombre_region = 'LA ARAUCANIA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'LA ARAUCANIA')
);

INSERT INTO COMPANIA
VALUES (
  SEQ_COMPANIA.NEXTVAL, 'J.D.A. HOFFMAN', 'LATINA D.32', 59, 1857000, 0.025,
  (SELECT c.id_comuna FROM COMUNA c JOIN REGION r ON r.id_region = c.cod_region
   WHERE c.comuna_nombre = 'Santiago' AND r.nombre_region = 'METROPOLITANA'),
  (SELECT id_region FROM REGION WHERE nombre_region = 'METROPOLITANA')
);

COMMIT;

-- CASO 4: RECUPERACION DE DATOS
-- INFORME 1
SELECT
  c.nombre_empresa                              AS "Nombre Empresa",
  TRIM(c.calle || ' ' || TO_CHAR(c.numeracion)) AS "Dirección",
  c.ntra_promedio                               AS "Renta Promedio",
  CASE
    WHEN c.pct_aumento IS NOT NULL
      THEN ROUND(c.ntra_promedio * (1 + c.pct_aumento))
  END                                           AS "Simulación de Renta"
FROM COMPANIA c
ORDER BY
  3 DESC,   -- "Renta Promedio" (de mayor a menor)
  1 ASC;    -- "Nombre Empresa" (Desempate ordenado alfabeticamente)

-- INFORME 2
SELECT
  c.id_empresa        AS "CODIGO",
  c.nombre_empresa    AS "EMPRESA",
  c.ntra_promedio     AS "PROM RENTA ACTUAL",
  CASE
    WHEN c.pct_aumento IS NOT NULL
      THEN ROUND(c.pct_aumento + 0.15, 3)
  END                 AS "PCT AUMENTADO EN 15%",
  CASE
    WHEN c.pct_aumento IS NOT NULL
      THEN ROUND(c.ntra_promedio * (1 + c.pct_aumento + 0.15))
  END                 AS "RENTA AUMENTADA"
FROM COMPANIA c
ORDER BY
  c.ntra_promedio ASC,   -- "Renta Actual" (menor a mayor)
  c.nombre_empresa DESC; -- Desempate: nombre desc